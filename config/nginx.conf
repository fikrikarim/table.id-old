upstream puma {
  server unix:///home/ubuntu/apps/table.id/shared/tmp/sockets/table.id-puma.sock;
}

server {
  server_name www.table.id table.id;
  listen 80;

  return 301 https://table.id$request_uri;
}

server {
  server_name table.id;

  root /home/ubuntu/apps/table.id/current/public;
  access_log /home/ubuntu/apps/table.id/current/log/nginx.access.log;
  error_log /home/ubuntu/apps/table.id/current/log/nginx.error.log info;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @puma;
  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    # needed for https
    # https://gist.github.com/rkjha/d898e225266f6bbe75d8
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;

    proxy_pass http://puma;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 10M;
  keepalive_timeout 10;


  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/table.id/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/table.id/privkey.pem; # managed by Certbot
  # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

  if ($scheme != "https") {
      return 301 https://$host$request_uri;
  } # managed by Certbot

}
